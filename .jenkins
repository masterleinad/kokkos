pipeline {
    agent none

    stages {
        stage('Build') {
            parallel {
                stage('HIP') {
                    agent {
                        dockerfile {
                            filename 'Dockerfile.hip'
                            dir 'scripts/docker'
                            additionalBuildArgs '--pull --build-arg HIP_VERSION=roc-2.9.0'
                            label 'nvidia-docker && volta'
                        }
                    }
                    steps {
                        sh 'ccache --zero-stats'
                        sh '''rm -rf build && mkdir -p build && cd build && \
                              cmake \
                                -DCMAKE_BUILD_TYPE=Debug \
                                -DCMAKE_CXX_COMPILER=/opt/rocm/hip/hipcc \
                                -DCMAKE_CXX_FLAGS=-Werror \
                                -DKokkos_ENABLE_COMPILER_WARNINGS=ON \
                                -DKokkos_ENABLE_DEBUG=ON \
                                -DKokkos_ENABLE_DEBUG_BOUNDS_CHECK=ON \
                                -DKokkos_ENABLE_TESTS=ON \
                                -DKokkos_ENABLE_HIP=ON \
                                -DKokkos_ARCH_VOLTA70=ON \
                              .. && \
                              make -j8 && ctest --output-on-failure'''
                    }
                }
                stage('Clang-Format') {
                    agent {
                        dockerfile {
                            filename 'Dockerfile.clang'
                            dir 'scripts/docker'
                            additionalBuildArgs '--pull'
                            label 'nvidia-docker || docker'
                            args '-v /tmp/ccache.kokkos:/tmp/ccache'
                        }
                    }
                    steps {
                        sh './scripts/docker/check_format_cpp.sh'
                    }
                }
            }
        }
    }
}
